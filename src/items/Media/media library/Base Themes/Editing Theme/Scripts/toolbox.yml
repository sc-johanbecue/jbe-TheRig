---
ID: "f5b1e945-f6bf-4300-a381-432fc85e946d"
Parent: "b0652987-4e54-4675-9dd0-2d112ced361b"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: /sitecore/media library/Base Themes/Editing Theme/Scripts/toolbox
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/F5B1E945F6BF4300A381432FC85E946D.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  BlobID: "f5b1e945-f6bf-4300-a381-432fc85e946d"
  Value: dmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7DQogICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9DQogICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7DQogICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH0NCiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbInRocm93Il0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfQ0KICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfQ0KICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7DQogICAgfSk7DQp9Ow0KdmFyIF9fZ2VuZXJhdG9yID0gKHRoaXMgJiYgdGhpcy5fX2dlbmVyYXRvcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIGJvZHkpIHsNCiAgICB2YXIgXyA9IHsgbGFiZWw6IDAsIHNlbnQ6IGZ1bmN0aW9uKCkgeyBpZiAodFswXSAmIDEpIHRocm93IHRbMV07IHJldHVybiB0WzFdOyB9LCB0cnlzOiBbXSwgb3BzOiBbXSB9LCBmLCB5LCB0LCBnOw0KICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCAidGhyb3ciOiB2ZXJiKDEpLCAicmV0dXJuIjogdmVyYigyKSB9LCB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnOw0KICAgIGZ1bmN0aW9uIHZlcmIobikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHN0ZXAoW24sIHZdKTsgfTsgfQ0KICAgIGZ1bmN0aW9uIHN0ZXAob3ApIHsNCiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy4iKTsNCiAgICAgICAgd2hpbGUgKF8pIHRyeSB7DQogICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5WyJyZXR1cm4iXSA6IG9wWzBdID8geVsidGhyb3ciXSB8fCAoKHQgPSB5WyJyZXR1cm4iXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7DQogICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07DQogICAgICAgICAgICBzd2l0Y2ggKG9wWzBdKSB7DQogICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7DQogICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTsNCiAgICAgICAgICAgICAgICBjYXNlIDU6IF8ubGFiZWwrKzsgeSA9IG9wWzFdOyBvcCA9IFswXTsgY29udGludWU7DQogICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlOw0KICAgICAgICAgICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgICAgICAgICAgIGlmICghKHQgPSBfLnRyeXMsIHQgPSB0Lmxlbmd0aCA+IDAgJiYgdFt0Lmxlbmd0aCAtIDFdKSAmJiAob3BbMF0gPT09IDYgfHwgb3BbMF0gPT09IDIpKSB7IF8gPSAwOyBjb250aW51ZTsgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH0NCiAgICAgICAgICAgICAgICAgICAgaWYgKHQgJiYgXy5sYWJlbCA8IHRbMl0pIHsgXy5sYWJlbCA9IHRbMl07IF8ub3BzLnB1c2gob3ApOyBicmVhazsgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7DQogICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTsNCiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfQ0KICAgICAgICBpZiAob3BbMF0gJiA1KSB0aHJvdyBvcFsxXTsgcmV0dXJuIHsgdmFsdWU6IG9wWzBdID8gb3BbMV0gOiB2b2lkIDAsIGRvbmU6IHRydWUgfTsNCiAgICB9DQp9Ow0KdmFyIFNYQVRvb2xib3g7DQooZnVuY3Rpb24gKFNYQVRvb2xib3gpIHsNCiAgICB2YXIgVG9vbGJveCA9IChmdW5jdGlvbiAoKSB7DQogICAgICAgIGZ1bmN0aW9uIFRvb2xib3goc3hhSnF1ZXJ5LCBjb29raWVzKSB7DQogICAgICAgICAgICB0aGlzLmNvb2tpZU5hbWUgPSAic3hhLXRvb2xib3gtanNvbiI7DQogICAgICAgICAgICB0aGlzLnRvb2xCb3hQbGFjZWhvbGRlciA9ICIiOw0KICAgICAgICAgICAgdGhpcy5yaWJib25QbGFjZWhvbGRlciA9ICIjc2NXZWJFZGl0UmliYm9uIjsNCiAgICAgICAgICAgIHRoaXMuZGVmYXVsdFNldHRpbmdzID0gew0KICAgICAgICAgICAgICAgIGFjdGl2ZUdyb3VwTGlzdDogW10sDQogICAgICAgICAgICAgICAgaXNNb2JpbGU6IGZhbHNlLA0KICAgICAgICAgICAgICAgIG9wZW5lZDogZmFsc2UsDQogICAgICAgICAgICAgICAgcG9zaXRpb246IHt9LA0KICAgICAgICAgICAgfTsNCiAgICAgICAgICAgIHRoaXMuJCA9IHN4YUpxdWVyeTsNCiAgICAgICAgICAgIHRoaXMuJC54YU1vdmVyLnJlZnJlc2hDb25maWd1cmF0aW9uKCk7DQogICAgICAgICAgICB0aGlzLmNvb2tpZXMgPSBjb29raWVzOw0KICAgICAgICAgICAgdGhpcy50b29sQm94UGxhY2Vob2xkZXIgPSBzeGFKcXVlcnkoIiN3cmFwcGVyIilbMF0NCiAgICAgICAgICAgICAgICA/ICIjd3JhcHBlciINCiAgICAgICAgICAgICAgICA6ICIjX19uZXh0IjsNCiAgICAgICAgfQ0KICAgICAgICBUb29sYm94LnByb3RvdHlwZS5zdHJpbmdUb0RPTSA9IGZ1bmN0aW9uIChtYXJrdXApIHsNCiAgICAgICAgICAgIHZhciBwYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCksIGVsID0gcGFyc2VyLnBhcnNlRnJvbVN0cmluZyhtYXJrdXAsICJ0ZXh0L2h0bWwiKTsNCiAgICAgICAgICAgIHJldHVybiBlbC5xdWVyeVNlbGVjdG9yKCJib2R5PioiKTsNCiAgICAgICAgfTsNCiAgICAgICAgVG9vbGJveC5wcm90b3R5cGUubG9hZENvbmZpZ3VyYXRpb24gPSBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgdmFyIHJlc3VsdCwgcXVlcnlQYXJhbXMsIHNjU2l0ZSwgaXRlbUlkLCBzY1NpdGUsIGVycm9yXzE7DQogICAgICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkgew0KICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnlQYXJhbXMgPSB3aW5kb3cubG9jYXRpb24uc2VhcmNoLnNsaWNlKDEpLnNwbGl0KCImIiksIHNjU2l0ZSA9IHF1ZXJ5UGFyYW1zLmZpbmQoZnVuY3Rpb24gKGVsKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlbC5pbmRleE9mKCJzY19zaXRlPSIpID4gLTE7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIGl0ZW1JZCA9IHF1ZXJ5UGFyYW1zLmZpbmQoZnVuY3Rpb24gKGVsKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlbC5pbmRleE9mKCJzY19pdGVtaWQ9IikgPiAtMTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwgc2NTaXRlID0gc2NTaXRlID8gc2NTaXRlIDogInNjX21vZGU9ZWRpdCI7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2EubGFiZWwgPSAxOw0KICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9hLnRyeXMucHVzaChbMSwgMywgLCA0XSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0LCB0aGlzLiQuYWpheCh7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxsb3dlZFJlbmRlcmluZ3M6IEpTT04uc3RyaW5naWZ5KHRoaXMuZ2V0QWxsb3dlZFJlbmRlcmluZ3MoKSksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVR5cGU6ICJqc29uIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJQT1NUIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogIi9+L3N4YS10b29sYm94L3JlbmRlcmluZ3MtZmVlZC8/Ii5jb25jYXQoc2NTaXRlLCAiJiIpLmNvbmNhdChpdGVtSWQpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KV07DQogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDI6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gX2Euc2VudCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiwgcmVzdWx0XTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMzoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcl8xID0gX2Euc2VudCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3JfMSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFszLCA0XTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNDogcmV0dXJuIFsyXTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH07DQogICAgICAgIFRvb2xib3gucHJvdG90eXBlLmZpbHRlckFsbG93ZWRDb21wb25lbnRzID0gZnVuY3Rpb24gKHJlbmRlcmluZ3MpIHsNCiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7DQogICAgICAgICAgICByZXR1cm4gcmVuZGVyaW5ncy5maWx0ZXIoZnVuY3Rpb24gKGVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gKF90aGlzLiQueGFNb3Zlci5hbGxvd2VkUmVuZGVyaW5ncy5pbmRleE9mKGVsZW1lbnQuSUQpID4gLTEpOw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH07DQogICAgICAgIFRvb2xib3gucHJvdG90eXBlLmFkZE5vdGlmaWNhdGlvbklmRW1wdHkgPSBmdW5jdGlvbiAocmVuZGVyaW5ncywgdHJhbnNsYXRpb25zKSB7DQogICAgICAgICAgICBpZiAoT2JqZWN0LmtleXMocmVuZGVyaW5ncykubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICAgICAgcmVuZGVyaW5nc1t0cmFuc2xhdGlvbnMuTm9SZW5kZXJpbmdzXSA9IFtdOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIHJlbmRlcmluZ3M7DQogICAgICAgIH07DQogICAgICAgIFRvb2xib3gucHJvdG90eXBlLnRvZ2dsZURldmljZU1vZGUgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICB2YXIgdG9vbGJveFNldHRpbmcgPSB0aGlzLmdldENvb2tpZVNldHRpbmdzKCk7DQogICAgICAgICAgICB0b29sYm94U2V0dGluZy5pc01vYmlsZSA9ICF0b29sYm94U2V0dGluZy5pc01vYmlsZTsNCiAgICAgICAgICAgIHRoaXMuY29va2llcy5jcmVhdGVDb29raWUodGhpcy5jb29raWVOYW1lLCBKU09OLnN0cmluZ2lmeSh0b29sYm94U2V0dGluZykpOw0KICAgICAgICAgICAgdGhpcy4kKCIjc3hhLXRvb2xib3giKS50b2dnbGVDbGFzcygic3hhLW1vYmlsZS10b29sYm94Iik7DQogICAgICAgICAgICB0aGlzLiQoImJvZHkiKS50cmlnZ2VyKCJzeGEtdG9vbGJveC1yZWZyZXNoIik7DQogICAgICAgIH07DQogICAgICAgIFRvb2xib3gucHJvdG90eXBlLnRvZ2dsZUNvbXBvbmVudHNHcm91cCA9IGZ1bmN0aW9uIChldmVudCkgew0KICAgICAgICAgICAgdmFyIHRvb2xib3hTZXR0aW5nID0gdGhpcy5nZXRDb29raWVTZXR0aW5ncygpLCAkdGFyZ2V0ID0gdGhpcy4kKGV2ZW50LnRhcmdldCksIHNlY3Rpb25OYW1lID0gJHRhcmdldC5kYXRhKCJzZWN0aW9uLW5hbWUiKTsNCiAgICAgICAgICAgIGlmICgoZXZlbnQudHlwZSA9PT0gImNsaWNrIiAmJiB0b29sYm94U2V0dGluZy5pc01vYmlsZSkgfHwNCiAgICAgICAgICAgICAgICAoZXZlbnQudHlwZSAhPT0gImNsaWNrIiAmJiAhdG9vbGJveFNldHRpbmcuaXNNb2JpbGUpIHx8DQogICAgICAgICAgICAgICAgIXNlY3Rpb25OYW1lKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYgKCF0b29sYm94U2V0dGluZy5hY3RpdmVHcm91cExpc3QpIHsNCiAgICAgICAgICAgICAgICB0b29sYm94U2V0dGluZy5hY3RpdmVHcm91cExpc3QgPSBbXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGlmICh0b29sYm94U2V0dGluZy5hY3RpdmVHcm91cExpc3QgJiYNCiAgICAgICAgICAgICAgICB0b29sYm94U2V0dGluZy5hY3RpdmVHcm91cExpc3QuaW5kZXhPZihzZWN0aW9uTmFtZSkgPT09IC0xKSB7DQogICAgICAgICAgICAgICAgdG9vbGJveFNldHRpbmcuYWN0aXZlR3JvdXBMaXN0LnB1c2goc2VjdGlvbk5hbWUpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgdG9vbGJveFNldHRpbmcuYWN0aXZlR3JvdXBMaXN0ID0NCiAgICAgICAgICAgICAgICAgICAgdG9vbGJveFNldHRpbmcuYWN0aXZlR3JvdXBMaXN0LmZpbHRlcihmdW5jdGlvbiAoYXJyRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFyckVsZW1lbnQgIT09IHNlY3Rpb25OYW1lOw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHRoaXMuY29va2llcy5jcmVhdGVDb29raWUodGhpcy5jb29raWVOYW1lLCBKU09OLnN0cmluZ2lmeSh0b29sYm94U2V0dGluZykpOw0KICAgICAgICAgICAgJHRhcmdldC50b2dnbGVDbGFzcygiZXhwYW5kZWQiKTsNCiAgICAgICAgfTsNCiAgICAgICAgVG9vbGJveC5wcm90b3R5cGUubWFrZURyYWdnYWJsZSA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgIHZhciBjYWNoZWREcmFnZ2FibGU7DQogICAgICAgICAgICB2YXIgdGhhdCA9IHRoaXMsIGRyYWdnZXIgPSB7DQogICAgICAgICAgICAgICAgYXBwZW5kVG86IHRoYXQudG9vbEJveFBsYWNlaG9sZGVyLA0KICAgICAgICAgICAgICAgIGNvbnRhaW5tZW50OiAiaHRtbCIsDQogICAgICAgICAgICAgICAgY3Vyc29yQXQ6IHsgdG9wOiAtMjAsIGxlZnQ6IDIwIH0sDQogICAgICAgICAgICAgICAgaGVscGVyOiAiY2xvbmUiLA0KICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuNywNCiAgICAgICAgICAgICAgICByZWZyZXNoUG9zaXRpb25zOiB0cnVlLA0KICAgICAgICAgICAgICAgIHN0YXJ0OiBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgICAgIHRoYXQuJCgiLnVpLWRyYWdnYWJsZS1kcmFnZ2luZyIpLmFkZENsYXNzKCJ0b29sYm94LWl0ZW0iKTsNCiAgICAgICAgICAgICAgICAgICAgd2luZG93LiR4YS54YU1vdmVyLnByZXBhcmVEcm9wcGFibGVQbGFjZWhvbGRlcnModGhhdC4kKHRoaXMpLCB0aGF0LiQoIiNzeGEtdG9vbGJveCIpKTsNCiAgICAgICAgICAgICAgICAgICAgY2FjaGVkRHJhZ2dhYmxlID0gdGhhdC4kKCIudWktZHJhZ2dhYmxlLWRyYWdnaW5nIik7DQogICAgICAgICAgICAgICAgICAgIGNhY2hlZERyYWdnYWJsZS5yZWZyZXNoQ291bnRlciA9IDA7DQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBzdG9wOiBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LiR4YS54YU1vdmVyLmNsZWFyRHJvcHBhYmxlUGxhY2Vob2xkZXJzKCk7DQogICAgICAgICAgICAgICAgICAgIH0sIDUwKTsNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIHNjcm9sbDogdHJ1ZSwNCiAgICAgICAgICAgIH07DQogICAgICAgICAgICB0aGlzLiQoIiNzeGEtdG9vbGJveC1yb290IGxpIHNwYW4iKS5kcmFnZ2FibGUoZHJhZ2dlcik7DQogICAgICAgIH07DQogICAgICAgIFRvb2xib3gucHJvdG90eXBlLmZpeFRvb2xib3hIZWlnaHQgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICB0aGlzLiQoIiNzeGEtdG9vbGJveC1yb290IikuY3NzKHsNCiAgICAgICAgICAgICAgICBoZWlnaHQ6ICIiLmNvbmNhdCh0aGlzLmdldFZpc2libGVIZWlnaHQoKSwgInB4IiksDQogICAgICAgICAgICB9KTsNCiAgICAgICAgfTsNCiAgICAgICAgVG9vbGJveC5wcm90b3R5cGUuYmluZEV2ZW50cyA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7DQogICAgICAgICAgICB2YXIgaW50ZXJ2YWxJZDsNCiAgICAgICAgICAgIHZhciB0aGF0ID0gdGhpcywgcmliYm9uID0gdGhpcy4kKHRoaXMucmliYm9uUGxhY2Vob2xkZXIpLCByaWJib25Db250ZW50cyA9IHJpYmJvbi5jb250ZW50cygpLCByaWJib25Td2l0Y2hlciA9IHJpYmJvbkNvbnRlbnRzLmZpbmQoIm5hdiA+IFtkYXRhLXNjLWlkPSdRdWlja1JpYmJvbiddIikgfHwNCiAgICAgICAgICAgICAgICByaWJib25Db250ZW50cy5maW5kKCIuc2MtcXVpY2tiYXItaXRlbS5zYy1xdWlja2Jhci1idXR0b24uc2NfUXVpY2tiYXJCdXR0b25fNTYiKTsNCiAgICAgICAgICAgIHRoaXMuJCh3aW5kb3cpLm9uKCJyZXNpemUiLCBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgdGhhdC4kKCIjc3hhLXRvb2xib3gtcm9vdCIpLnRyaWdnZXIoInN4YS10b29sYm94LXJlZnJlc2giKTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgdGhpcy4kKCJib2R5IikNCiAgICAgICAgICAgICAgICAub24oInN4YS10b29sYm94LXJlZnJlc2giLCBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgX3RoaXMucmVmcmVzaFRvb2xib3goKTsNCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgLm9uKCJjbGljayIsICIuc3hhLXRvZ2dsZS1kZXZpY2UiLCBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgX3RoaXMudG9nZ2xlRGV2aWNlTW9kZSgpOw0KICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICAub24oInRvdWNoc3RhcnQgcG9pbnRlcmRvd24gTVNQb2ludGVyRG93biIsICIuc3hhLXRvZ2dsZS1kZXZpY2UtdG91Y2giLCBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgX3RoaXMudG9nZ2xlRGV2aWNlTW9kZSgpOw0KICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICAub24oImNsaWNrIHRvdWNoc3RhcnQgcG9pbnRlcmRvd24gTVNQb2ludGVyRG93biIsICIjc3hhLXRvb2xib3gtcm9vdCBzcGFuIiwgZnVuY3Rpb24gKGV2ZW50KSB7DQogICAgICAgICAgICAgICAgX3RoaXMudG9nZ2xlQ29tcG9uZW50c0dyb3VwKGV2ZW50KTsNCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgLm9uKCJjbGljayB0b3VjaHN0YXJ0IHBvaW50ZXJkb3duIE1TUG9pbnRlckRvd24iLCAiLnN4YS10b29sYm94LWV4cGFuZGVyIiwgZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgICAgIF90aGlzLnRvZ2dsZVZpc2liaWxpdHkoKTsNCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgLm9uKCJrZXl1cCIsICIuc3hhLXRvb2xib3gtc2VhcmNoLWlucHV0IiwgZnVuY3Rpb24gKGV2ZW50KSB7DQogICAgICAgICAgICAgICAgdmFyIGZpbHRlcmVkVGV4dCA9IHRoYXQuJChldmVudC50YXJnZXQpLnZhbCgpOw0KICAgICAgICAgICAgICAgIGlmIChmaWx0ZXJlZFRleHQubGVuZ3RoID49IDEpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhhdC5maWx0ZXJSZW5kZXJpbmdzKGZpbHRlcmVkVGV4dCk7DQogICAgICAgICAgICAgICAgICAgIHRoYXQuaGlkZUVtcHR5U2VjdGlvbnMoKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHRoYXQuY2xlYXJTZWFyY2goKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIC5vbigiY2xpY2sgdG91Y2hzdGFydCBwb2ludGVyZG93biBNU1BvaW50ZXJEb3duIiwgIi5zeGEtdG9vbGJveC1jbGVhci1zZWFyY2giLCBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgdGhhdC4kKCIuc3hhLXRvb2xib3gtc2VhcmNoLWlucHV0IikNCiAgICAgICAgICAgICAgICAgICAgLnZhbCgiIikNCiAgICAgICAgICAgICAgICAgICAgLnRyaWdnZXIoImtleXVwIik7DQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIC5vbigiY2xpY2siLCAiLnN4YS1zZWFyY2gtZ2xhc3MtYnRuIiwgZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgICAgIHRoYXQuJCgiLnN4YS10b29sYm94LXNlYXJjaCIpLnRvZ2dsZUNsYXNzKCJzeGEtdG9vbGJveC1oaWRlZCIpOw0KICAgICAgICAgICAgICAgIHRoYXQuJCgiLnN4YS10b29sYm94LWNsZWFyLXNlYXJjaCIpLnRyaWdnZXIoImNsaWNrIik7DQogICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIFhBLmhhc1BhZ2VNb2RlcygpICYmDQogICAgICAgICAgICAgICAgU2l0ZWNvcmUuUGFnZU1vZGVzLkNocm9tZU1hbmFnZXIuY2hyb21lc1Jlc2V0ZWQub2JzZXJ2ZShmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgICAgIHRoYXQuJC54YU1vdmVyLnJlZnJlc2hDb25maWd1cmF0aW9uKCk7DQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICBpbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgICAgIHZhciBjb250ZXh0ID0gd2luZG93LkV4cGVyaWVuY2VFZGl0b3IgJiYNCiAgICAgICAgICAgICAgICAgICAgd2luZG93LkV4cGVyaWVuY2VFZGl0b3IuZ2V0Q29udGV4dCAmJg0KICAgICAgICAgICAgICAgICAgICB3aW5kb3cuRXhwZXJpZW5jZUVkaXRvci5nZXRDb250ZXh0KCksIGlzUmliYm9uUmVuZGVyZWQgPSBjb250ZXh0ICYmIGNvbnRleHQuaXNSaWJib25SZW5kZXJlZDsNCiAgICAgICAgICAgICAgICBpZiAoIWlzUmliYm9uUmVuZGVyZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSWQpOw0KICAgICAgICAgICAgICAgIHNldFRpbWVvdXQodGhhdC5maXhUb29sYm94SGVpZ2h0LmJpbmQodGhhdCksIDApOw0KICAgICAgICAgICAgfSwgMTAwMCk7DQogICAgICAgICAgICByaWJib25Db250ZW50cy5vbigiY2xpY2siLCAibmF2ID4gW2RhdGEtc2MtaWQ9J1F1aWNrUmliYm9uJ10sLnNjLXF1aWNrYmFyLWl0ZW0uc2MtcXVpY2tiYXItYnV0dG9uLnNjX1F1aWNrYmFyQnV0dG9uXzU2IiwgZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgICAgIHRoYXQuZml4VG9vbGJveEhlaWdodCgpOw0KICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB0aGlzLm1ha2VEcmFnZ2FibGUoKTsNCiAgICAgICAgfTsNCiAgICAgICAgVG9vbGJveC5wcm90b3R5cGUuZ3JvdXBDb21wb25lbnRCeU5hbWVzID0gZnVuY3Rpb24gKHJlbmRlcmluZ3MsIHRyYW5zbGF0aW9ucykgew0KICAgICAgICAgICAgdmFyIGdyb3VwZWRDb21wb25lbnRzID0ge307DQogICAgICAgICAgICByZW5kZXJpbmdzLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICBpZiAoIWdyb3VwZWRDb21wb25lbnRzW2VsZW1lbnQuUGFyZW50XSkgew0KICAgICAgICAgICAgICAgICAgICBncm91cGVkQ29tcG9uZW50c1tlbGVtZW50LlBhcmVudF0gPSBbXTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgZ3JvdXBlZENvbXBvbmVudHNbZWxlbWVudC5QYXJlbnRdLnB1c2goZWxlbWVudCk7DQogICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIGdyb3VwZWRDb21wb25lbnRzID0gdGhpcy5hZGROb3RpZmljYXRpb25JZkVtcHR5KGdyb3VwZWRDb21wb25lbnRzLCB0cmFuc2xhdGlvbnMpOw0KICAgICAgICAgICAgcmV0dXJuIGdyb3VwZWRDb21wb25lbnRzOw0KICAgICAgICB9Ow0KICAgICAgICBUb29sYm94LnByb3RvdHlwZS5zZXRJbml0aWFsU2V0dGluZ3MgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICB2YXIgc2V0dGluZ3MgPSBPYmplY3QuYXNzaWduKHRoaXMuZGVmYXVsdFNldHRpbmdzLCB0aGlzLmdldENvb2tpZVNldHRpbmdzKCkpOw0KICAgICAgICAgICAgdGhpcy5jb29raWVzLmNyZWF0ZUNvb2tpZSh0aGlzLmNvb2tpZU5hbWUsIEpTT04uc3RyaW5naWZ5KHNldHRpbmdzKSk7DQogICAgICAgIH07DQogICAgICAgIFRvb2xib3gucHJvdG90eXBlLmhpZGVFbXB0eVNlY3Rpb25zID0gZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgdmFyIHRvb2xib3hDb250YWluZXIgPSB0aGlzLiQoIi5tQ3VzdG9tU2Nyb2xsYmFyIC5tQ1NCX2NvbnRhaW5lciIpLCBjb21wb25lbnRzU2VjdGlvbnMgPSB0b29sYm94Q29udGFpbmVyLmZpbmQoIj5kaXYiKSwgdGhhdCA9IHRoaXM7DQogICAgICAgICAgICBjb25zb2xlLmxvZyhjb21wb25lbnRzU2VjdGlvbnMpDQogICAgICAgICAgICBjb21wb25lbnRzU2VjdGlvbnMuZWFjaChmdW5jdGlvbiAocG9zLCBlbGVtKSB7DQogICAgICAgICAgICAgICAgdmFyICRlbGVtID0gdGhhdC4kKGVsZW0pLCB0b29sYm94U2VjdGlvbiA9ICRlbGVtLmZpbmQoIiNzeGEtdG9vbGJveC1zZWN0aW9uIik7DQogICAgICAgICAgICAgICAgaWYgKCRlbGVtLmZpbmQoIi51aS1kcmFnZ2FibGU6bm90KC5zeGEtdG9vbGJveC1oaWRlZCkiKQ0KICAgICAgICAgICAgICAgICAgICAubGVuZ3RoID09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgJGVsZW0uYWRkQ2xhc3MoInN4YS10b29sYm94LWhpZGVkIik7DQogICAgICAgICAgICAgICAgICAgIHRvb2xib3hTZWN0aW9uLnJlbW92ZUNsYXNzKCJzZWFyY2gtZXhwYW5kZWQiKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICRlbGVtLnJlbW92ZUNsYXNzKCJzeGEtdG9vbGJveC1oaWRlZCIpOw0KICAgICAgICAgICAgICAgICAgICB0b29sYm94U2VjdGlvbi5hZGRDbGFzcygic2VhcmNoLWV4cGFuZGVkIik7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQogICAgICAgIH07DQogICAgICAgIFRvb2xib3gucHJvdG90eXBlLmNsZWFyU2VhcmNoID0gZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgdmFyIHRvb2xib3hDb250YWluZXIgPSB0aGlzLiQoIi5tQ3VzdG9tU2Nyb2xsYmFyIC5tQ1NCX2NvbnRhaW5lciIpLCB0b29sYm94U2VjdGlvbiA9IHRvb2xib3hDb250YWluZXIuZmluZCgiPmRpdj5zcGFuIiksIGNvbXBvbmVudHNTZWN0aW9ucyA9IHRvb2xib3hDb250YWluZXIuZmluZCgiPmRpdiIpOw0KICAgICAgICAgICAgdG9vbGJveFNlY3Rpb24ucmVtb3ZlQ2xhc3MoInNlYXJjaC1leHBhbmRlZCIpOw0KICAgICAgICAgICAgY29tcG9uZW50c1NlY3Rpb25zLnJlbW92ZUNsYXNzKCJzeGEtdG9vbGJveC1oaWRlZCIpOw0KICAgICAgICAgICAgY29tcG9uZW50c1NlY3Rpb25zLmZpbmQoImxpPnNwYW4iKS5yZW1vdmVDbGFzcygic3hhLXRvb2xib3gtaGlkZWQiKTsNCiAgICAgICAgfTsNCiAgICAgICAgVG9vbGJveC5wcm90b3R5cGUuZmlsdGVyUmVuZGVyaW5ncyA9IGZ1bmN0aW9uIChmaWx0ZXIpIHsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdGSUxURVInLCBmaWx0ZXIpOw0KICAgICAgICAgICAgdmFyIGFsbFJlbmRlcmluZ3MgPSB0aGlzLiQoIi5tQ1NCX2NvbnRhaW5lciBsaSIpLCBsb3dlckZpbHRlciA9IGZpbHRlci50b0xvd2VyQ2FzZSgpLCB0aGF0ID0gdGhpczsNCiAgICAgICAgICAgIGFsbFJlbmRlcmluZ3MuZWFjaChmdW5jdGlvbiAocG9zLCBlbCkgew0KICAgICAgICAgICAgICAgIHZhciBpdGVtV3JhcHBlciA9IHRoYXQuJChlbCkuZmluZCgic3BhbiIpOw0KICAgICAgICAgICAgICAgIGlmIChpdGVtV3JhcHBlci50ZXh0KCkudG9Mb3dlckNhc2UoKS5pbmRleE9mKGxvd2VyRmlsdGVyKSA+IC0xKSB7DQogICAgICAgICAgICAgICAgICAgIGl0ZW1XcmFwcGVyLnJlbW92ZUNsYXNzKCJzeGEtdG9vbGJveC1oaWRlZCIpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgaXRlbVdyYXBwZXIuYWRkQ2xhc3MoInN4YS10b29sYm94LWhpZGVkIik7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQogICAgICAgIH07DQogICAgICAgIFRvb2xib3gucHJvdG90eXBlLmdldE1hcmt1cCA9IGZ1bmN0aW9uIChjb25maWcpIHsNCiAgICAgICAgICAgIHZhciBzZXR0aW5ncyA9IEpTT04ucGFyc2UodGhpcy5jb29raWVzLnJlYWRDb29raWUodGhpcy5jb29raWVOYW1lKSksIGFsbG93ZWRDb21wb25lbnRzID0gdGhpcy5maWx0ZXJBbGxvd2VkQ29tcG9uZW50cyhjb25maWcucmVuZGVyaW5ncyksIGdyb3VwZWRDb21wb25lbnRzID0gdGhpcy5ncm91cENvbXBvbmVudEJ5TmFtZXMoYWxsb3dlZENvbXBvbmVudHMsIGNvbmZpZy50cmFuc2xhdGlvbnMpOw0KICAgICAgICAgICAgdmFyIG5ld1Rvb2xib3ggPSAiPGRpdiBpZD1cInN4YS10b29sYm94XCIgY2xhc3M9XCIiLmNvbmNhdChzZXR0aW5ncy5vcGVuZWQgPyAic2hvdy10b29sYm94IiA6ICIiLCAiICAiKS5jb25jYXQoc2V0dGluZ3MuaXNNb2JpbGUgPyAic3hhLW1vYmlsZS10b29sYm94IiA6ICIiLCAiXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzeGEtdG9vbGJveC1leHBhbmRlclwiPjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGFuZGxlIHN4YS10b29sYm94LWhlYWRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN4YS10b29sYm94LWxhYmVsXCI+IikuY29uY2F0KGNvbmZpZy50cmFuc2xhdGlvbnMuVG9vbGJveCwgIjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN4YS10b2dnbGUtZGV2aWNlXCI+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3hhLXRvZ2dsZS1kZXZpY2UtdG91Y2hcIj48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICIpLmNvbmNhdChhbGxvd2VkQ29tcG9uZW50cy5sZW5ndGggPiAwDQogICAgICAgICAgICAgICAgPyAiPGRpdiBjbGFzcz1cInN4YS1zZWFyY2gtZ2xhc3MtYnRuXCI+PC9kaXY+Ig0KICAgICAgICAgICAgICAgIDogIiIsICJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICIpLmNvbmNhdChhbGxvd2VkQ29tcG9uZW50cy5sZW5ndGggPiAwDQogICAgICAgICAgICAgICAgPyAiPGRpdiBjbGFzcz1cInN4YS10b29sYm94LXNlYXJjaCBzeGEtdG9vbGJveC1oaWRlZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwic3hhLXRvb2xib3gtc2VhcmNoLWlucHV0XCIgdHlwZT1cInRleHRcIiB2YWx1ZT1cIlwiIHBsYWNlaG9sZGVyPVwiU2VhcmNoIGZvciBjb21wb25lbnRcIi8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3hhLXRvb2xib3gtY2xlYXItc2VhcmNoXCIgdGl0bGU9XCJDbGVhclwiPng8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+Ig0KICAgICAgICAgICAgICAgIDogIiIsICJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1DdXN0b21TY3JvbGxiYXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9XCJzeGEtdG9vbGJveC1yb290XCIgc3R5bGU9XCJoZWlnaHQ6IikuY29uY2F0KHRoaXMuZ2V0VmlzaWJsZUhlaWdodCgpLCAicHhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibUNTQl9jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIikuY29uY2F0KGFsbG93ZWRDb21wb25lbnRzLmxlbmd0aA0KICAgICAgICAgICAgICAgID8gT2JqZWN0LmtleXMoZ3JvdXBlZENvbXBvbmVudHMpICYmDQogICAgICAgICAgICAgICAgICAgIE9iamVjdC5rZXlzKGdyb3VwZWRDb21wb25lbnRzKQ0KICAgICAgICAgICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoY29tcG9uZW50R3JvdXApIHsgcmV0dXJuICJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9XCJzeGEtdG9vbGJveC1zZWN0aW9uXCIgZGF0YS1zZWN0aW9uLW5hbWU9XCIiLmNvbmNhdChjb21wb25lbnRHcm91cC50b0xvY2FsZUxvd2VyQ2FzZSgpLCAiXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCIiKS5jb25jYXQoc2V0dGluZ3MuYWN0aXZlR3JvdXBMaXN0LmluZGV4T2YoY29tcG9uZW50R3JvdXAudG9Mb2NhbGVMb3dlckNhc2UoKSkgPiAtMQ0KICAgICAgICAgICAgICAgICAgICAgICAgPyAiZXhwYW5kZWQiDQogICAgICAgICAgICAgICAgICAgICAgICA6ICIiLCAiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiKS5jb25jYXQoYWxsb3dlZENvbXBvbmVudHMubGVuZ3RoID09DQogICAgICAgICAgICAgICAgICAgICAgICAwDQogICAgICAgICAgICAgICAgICAgICAgICA/ICJzeGEtdG9vbGJveC1lbXB0eS1zZWN0aW9uIg0KICAgICAgICAgICAgICAgICAgICAgICAgOiAiIiwgIiBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIikuY29uY2F0KGNvbmZpZy50cmFuc2xhdGlvbnMuR3JvdXBzW2NvbXBvbmVudEdyb3VwXSwgIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIikuY29uY2F0KGdyb3VwZWRDb21wb25lbnRzW2NvbXBvbmVudEdyb3VwXQ0KICAgICAgICAgICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoY29tcG9uZW50KSB7IHJldHVybiAiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIuY29uY2F0KHNldHRpbmdzLmlzTW9iaWxlDQogICAgICAgICAgICAgICAgICAgICAgICA/ICJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ3JpcHBlci1pY29uIHRvdWNoLWdyaXBwZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVyc2lvbj1cIjEuMVwiIGlkPVwiTGF5ZXJfMVwiIHg9XCIwcHhcIiB5PVwiMHB4XCIgd2lkdGg9XCIzMHB4XCIgaGVpZ2h0PVwiMzBweFwiIHZpZXdCb3g9XCIwIDAgNTEyIDUxMlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPVwiZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTEyO1wiIHhtbDpzcGFjZT1cInByZXNlcnZlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmVjdCB5PVwiMTQ0XCIgd2lkdGg9XCI1MTJcIiBoZWlnaHQ9XCIzMlwiLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmVjdCB5PVwiMjQwXCIgd2lkdGg9XCI1MTJcIiBoZWlnaHQ9XCIzMlwiLz48cmVjdCB5PVwiMzM2XCIgd2lkdGg9XCI1MTJcIiBoZWlnaHQ9XCIzMlwiLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+Ig0KICAgICAgICAgICAgICAgICAgICAgICAgOiAiIiwgIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gZGF0YS1pY29uPVwiIikuY29uY2F0KGNvbXBvbmVudC5JY29uLCAiXCIgZGF0YS1pY29uMjQ9XCIiKS5jb25jYXQoY29tcG9uZW50Lkljb24yNCwgIlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1pZD1cIiIpLmNvbmNhdChjb21wb25lbnQuSUQsICJcIiBzdHlsZT1cImJhY2tncm91bmQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsKCIpLmNvbmNhdChzZXR0aW5ncy5pc01vYmlsZQ0KICAgICAgICAgICAgICAgICAgICAgICAgPyAiIi5jb25jYXQoY29tcG9uZW50Lkljb24yNCkNCiAgICAgICAgICAgICAgICAgICAgICAgIDogIiIuY29uY2F0KGNvbXBvbmVudC5JY29uKSwgIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuby1yZXBlYXQgNXB4IDVweDtcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiKS5jb25jYXQoY29tcG9uZW50LkRpc3BsYXlOYW1lLCAiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIik7IH0pDQogICAgICAgICAgICAgICAgICAgICAgICAuam9pbigiICIpLCAiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiKTsgfSkNCiAgICAgICAgICAgICAgICAgICAgICAgIC5qb2luKCIgIikNCiAgICAgICAgICAgICAgICA6ICc8ZGl2IHN0eWxlPSJjb2xvcjogd2hpdGU7Zm9udC1zaXplOiAxNHB4O3BhZGRpbmc6IDE1cHg7bWF4LXdpZHRoOiAzMDBweDt0ZXh0LWFsaWduOiBjZW50ZXI7Ij5ObyByZW5kZXJpbmdzIGNhbiBiZSBhZGRlZCB0byB0aGUgcGFnZSBhdCB0aGlzIHRpbWUuPC9kaXY+JywgIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PiIpOw0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RyaW5nVG9ET00obmV3VG9vbGJveCk7DQogICAgICAgIH07DQogICAgICAgIFRvb2xib3gucHJvdG90eXBlLmdldFZpc2libGVIZWlnaHQgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICByZXR1cm4gKHRoaXMuJCh3aW5kb3cpLmhlaWdodCgpIC0NCiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLnRvb2xCb3hQbGFjZWhvbGRlci5zbGljZSgxKSkNCiAgICAgICAgICAgICAgICAgICAgLm9mZnNldFRvcCAtDQogICAgICAgICAgICAgICAgKHRoaXMuJCgiLnN4YS10b29sYm94LWhlYWRlciIpLmhlaWdodCgpIHx8IDIwKSk7DQogICAgICAgIH07DQogICAgICAgIFRvb2xib3gucHJvdG90eXBlLmdldEFsbG93ZWRSZW5kZXJpbmdzID0gZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgaWYgKCFYQS5oYXNQYWdlTW9kZXMoKSkNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB2YXIgYWxsb3dlZFJlbmRlcmluZ3MgPSBbXSwgY2hyb21lcyA9IFNpdGVjb3JlLlBhZ2VNb2Rlcy5DaHJvbWVNYW5hZ2VyLmNocm9tZXMoKSwgaSwgaiwgY2hyb21lLCByZW5kZXJpbmdzID0gW107DQogICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY2hyb21lcy5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgICAgIGNocm9tZSA9IGNocm9tZXNbaV07DQogICAgICAgICAgICAgICAgaWYgKGNocm9tZS5kYXRhICE9PSB1bmRlZmluZWQgJiYNCiAgICAgICAgICAgICAgICAgICAgY2hyb21lLmRhdGEuY3VzdG9tICE9PSB1bmRlZmluZWQgJiYNCiAgICAgICAgICAgICAgICAgICAgY2hyb21lLmRhdGEuY3VzdG9tLmFsbG93ZWRSZW5kZXJpbmdzICE9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgdmFyIGNocm9tZVJlbmRlcmluZ3MgPSBjaHJvbWUuZGF0YS5jdXN0b20uYWxsb3dlZFJlbmRlcmluZ3M7DQogICAgICAgICAgICAgICAgICAgIGZvciAoaiA9IDA7IGogPCBjaHJvbWVSZW5kZXJpbmdzLmxlbmd0aDsgaisrKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy4kLmluQXJyYXkoY2hyb21lUmVuZGVyaW5nc1tqXSwgYWxsb3dlZFJlbmRlcmluZ3MpID09PSAtMSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93ZWRSZW5kZXJpbmdzLnB1c2goY2hyb21lUmVuZGVyaW5nc1tqXSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICBjaHJvbWVzDQogICAgICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoZSkgew0KICAgICAgICAgICAgICAgIHJldHVybiAoZS5kYXRhLmN1c3RvbSAhPSBudWxsICYmDQogICAgICAgICAgICAgICAgICAgIGUuZGF0YS5jdXN0b20uZWRpdGFibGUgPT09ICJ0cnVlIiAmJg0KICAgICAgICAgICAgICAgICAgICBlLmRhdGEuY3VzdG9tLmFsbG93ZWRSZW5kZXJpbmdzICE9IG51bGwgJiYNCiAgICAgICAgICAgICAgICAgICAgZS5kYXRhLmN1c3RvbS5hbGxvd2VkUmVuZGVyaW5ncy5sZW5ndGggPiAwKTsNCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgLmZvckVhY2goZnVuY3Rpb24gKGUpIHsNCiAgICAgICAgICAgICAgICBmb3IgKHZhciBpXzEgPSAwOyBpXzEgPCBlLmRhdGEuY3VzdG9tLmFsbG93ZWRSZW5kZXJpbmdzLmxlbmd0aDsgaV8xKyspIHsNCiAgICAgICAgICAgICAgICAgICAgdmFyIGN1cnJlbnQgPSBlLmRhdGEuY3VzdG9tLmFsbG93ZWRSZW5kZXJpbmdzW2lfMV07DQogICAgICAgICAgICAgICAgICAgIGlmIChyZW5kZXJpbmdzLmluZGV4T2YoY3VycmVudCkgPj0gMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgcmVuZGVyaW5ncy5wdXNoKGN1cnJlbnQpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgcmV0dXJuIHJlbmRlcmluZ3M7DQogICAgICAgIH07DQogICAgICAgIFRvb2xib3gucHJvdG90eXBlLmhhbmRsZVJlc3BvbnNlID0gZnVuY3Rpb24gKG1lc3NhZ2UsIHJlc3VsdCkgew0KICAgICAgICAgICAgaWYgKG1lc3NhZ2UgIT09ICJjaHJvbWU6cGxhY2Vob2xkZXI6Y29udHJvbGFkZGluZ2NhbmNlbGxlZCIpIHsNCiAgICAgICAgICAgICAgICB0aGlzLiQueGFNb3Zlci5jdXJyZW50Q2hyb21lLnR5cGUuYWRkQ29udHJvbFJlc3BvbnNlKHJlc3VsdC5pZCwgcmVzdWx0Lm9wZW5Qcm9wZXJ0aWVzLCByZXN1bHQuZGF0YVNvdXJjZSk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICB0aGlzLiQueGFNb3Zlci5jbGVhbnVwKCk7DQogICAgICAgICAgICB9DQogICAgICAgIH07DQogICAgICAgIFRvb2xib3gucHJvdG90eXBlLmdldENvb2tpZVNldHRpbmdzID0gZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgdmFyIG9wdGlvbnNTdHJpbmcgPSB0aGlzLmNvb2tpZXMucmVhZENvb2tpZSh0aGlzLmNvb2tpZU5hbWUpIHx8ICJ7fSIsIG9wdGlvbnMgPSBKU09OLnBhcnNlKG9wdGlvbnNTdHJpbmcpOw0KICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnM7DQogICAgICAgIH07DQogICAgICAgIFRvb2xib3gucHJvdG90eXBlLnRvZ2dsZVZpc2liaWxpdHkgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICB2YXIgdG9vbGJveFNldHRpbmcgPSB0aGlzLmdldENvb2tpZVNldHRpbmdzKCksIHRvb2xib3ggPSB0aGlzLiQoIiNzeGEtdG9vbGJveCIpOw0KICAgICAgICAgICAgdG9vbGJveFNldHRpbmcub3BlbmVkID0gIXRvb2xib3hTZXR0aW5nLm9wZW5lZDsNCiAgICAgICAgICAgIHRoaXMuY29va2llcy5jcmVhdGVDb29raWUodGhpcy5jb29raWVOYW1lLCBKU09OLnN0cmluZ2lmeSh0b29sYm94U2V0dGluZykpOw0KICAgICAgICAgICAgdG9vbGJveFNldHRpbmcub3BlbmVkDQogICAgICAgICAgICAgICAgPyB0b29sYm94LmFkZENsYXNzKCJzaG93LXRvb2xib3giKQ0KICAgICAgICAgICAgICAgIDogdG9vbGJveC5yZW1vdmVDbGFzcygic2hvdy10b29sYm94Iik7DQogICAgICAgIH07DQogICAgICAgIFRvb2xib3gucHJvdG90eXBlLnRvb2xib3hFeHBhbmRlclBvc2l0aW9uID0gZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgdmFyIHRvb2xCb3hFeHBhbmRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5zeGEtdG9vbGJveC1leHBhbmRlciIpOw0KICAgICAgICAgICAgdmFyIHJlY3RFeHBhbmRlciA9IHRvb2xCb3hFeHBhbmRlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCiAgICAgICAgICAgIGlmIChyZWN0RXhwYW5kZXIudG9wICsgcmVjdEV4cGFuZGVyLmhlaWdodCA+PSB3aW5kb3cuaW5uZXJIZWlnaHQpIHsNCiAgICAgICAgICAgICAgICBqUXVlcnkodG9vbEJveEV4cGFuZGVyKS5hZGRDbGFzcygiZXhwYW5kZXItb3V0LXNjcmVlbiIpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgalF1ZXJ5KHRvb2xCb3hFeHBhbmRlcikucmVtb3ZlQ2xhc3MoImV4cGFuZGVyLW91dC1zY3JlZW4iKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfTsNCiAgICAgICAgVG9vbGJveC5wcm90b3R5cGUucmVmcmVzaFRvb2xib3ggPSBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICB2YXIgZGF0YSA9IHRoaXMuY29uZmlnLCB0b29sYm94TWFya3VwID0gdGhpcy5nZXRNYXJrdXAoZGF0YSk7DQogICAgICAgICAgICB0aGlzLiQoIiNzeGEtdG9vbGJveCIpLnJlbW92ZSgpOw0KICAgICAgICAgICAgdGhpcy4kKHRvb2xib3hNYXJrdXApLmluc2VydEJlZm9yZSh0aGlzLnRvb2xCb3hQbGFjZWhvbGRlcik7DQogICAgICAgICAgICB0aGlzLm1ha2VEcmFnZ2FibGUoKTsNCiAgICAgICAgICAgIHRoaXMudG9vbGJveEV4cGFuZGVyUG9zaXRpb24oKTsNCiAgICAgICAgfTsNCiAgICAgICAgVG9vbGJveC5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7DQogICAgICAgICAgICBpZiAodGhpcy5jb25maWcgfHwgIXdpbmRvdy5TaXRlY29yZSkgew0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHRoaXMubG9hZENvbmZpZ3VyYXRpb24oKQ0KICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7DQogICAgICAgICAgICAgICAgX3RoaXMuY29uZmlnID0gZGF0YTsNCiAgICAgICAgICAgICAgICBfdGhpcy5zZXRJbml0aWFsU2V0dGluZ3MoKTsNCiAgICAgICAgICAgICAgICBfdGhpcy5yZWZyZXNoVG9vbGJveCgpOw0KICAgICAgICAgICAgICAgIF90aGlzLmJpbmRFdmVudHMoKTsNCiAgICAgICAgICAgICAgICBfdGhpcy4kKGRvY3VtZW50KS50cmlnZ2VyKCJzeGEtdG9vbGJveC1sb2FkZWQiKTsNCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgew0KICAgICAgICAgICAgICAgIGNvbnNvbGUuaW5mbyhlcnJvcik7DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfTsNCiAgICAgICAgcmV0dXJuIFRvb2xib3g7DQogICAgfSgpKTsNCiAgICBTWEFUb29sYm94LlRvb2xib3ggPSBUb29sYm94Ow0KfSkoU1hBVG9vbGJveCB8fCAoU1hBVG9vbGJveCA9IHt9KSk7DQp3aW5kb3cuJHhhKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7DQogICAgd2luZG93LiR4YS50b29sYm94ID0gbmV3IFNYQVRvb2xib3guVG9vbGJveCh3aW5kb3cuJHhhLCB3aW5kb3cuWEEuY29va2llcyk7DQp9KTsNCg==
- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 24787
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: "application/x-javascript"
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: js
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20160509T085839Z
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "78069c8f-ffc8-46f2-a7f8-ed0c7a7d1286"
